<?php

/**
 * @file
 * Display Suite UI.
 */

/**
 * Implements hook_permission().
 */
function ds_ui_permission() {
  return array(
    'admin view modes' => array(
      'title' => t('Administer view modes'),
      'description' => t('Manage custom view modes for every entity.')
    ),
    'admin fields' => array(
      'title' => t('Administer fields'),
      'description' => t('Manage fields for every entity.')
    ),
    'admin classes' => array(
      'title' => t('Administer classes'),
      'description' => t('Manage classes.')
    ),
  );
}

/**
 * Implements hook_menu().
 */
function ds_ui_menu() {
  $items = array();

  // Custom CSS classes.
  $items['admin/structure/ds/classes'] = array(
    'title' => 'CSS classes',
    'description' => 'Define extra CSS class names for regions and fields.',
    'route_name' => 'ds_classes',
    'type' => MENU_LOCAL_TASK,
  );

  // View modes.
  $items['admin/structure/ds/view_modes'] = array(
    'title' => 'View modes',
    'description' => 'Manage view modes for all content.',
    'route_name' => 'view_modes_list',
    'weight' => -9,
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/structure/ds/view_modes/manage'] = array(
    'title' => 'Add view mode',
    'description' => 'Adds a view mode',
    'route_name' => 'view_mode_add',
    'type' => MENU_LOCAL_ACTION,
  );
  $items['admin/structure/ds/view_modes/manage/%'] = array(
    'title' => 'Edit view mode',
    'description' => 'Manages a view mode',
    'route_name' => 'view_mode_manage',
  );
  $items['admin/structure/ds/view_modes/delete/%'] = array(
    'title' => 'Delete a view mode',
    'description' => 'Delete a custom view mode.',
    'route_name' => 'view_mode_delete',
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );

  // Fields.
  $items['admin/structure/ds/fields'] = array(
    'title' => 'Fields',
    'description' => 'Manage fields for all content.',
    'route_name' => 'custom_fields_list',
    'weight' => -8,
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/structure/ds/fields/manage/%'] = array(
    'title' => 'Manage fields',
    'route_name' => 'manage_custom_field',
  );
  $items['admin/structure/ds/fields/manage_custom'] = array(
    'title' => 'Add a code field',
    'description' => 'Add a custom field',
    'route_name' => 'add_custom_code_field',
    'type' => MENU_LOCAL_ACTION,
    'weight' => 0,
  );
  $items['admin/structure/ds/fields/manage_custom/%'] = array(
    'title' => 'Edit a code field',
    'description' => 'Manage a field',
    'route_name' => 'manage_custom_code_field',
  );
  $items['admin/structure/ds/fields/manage_preprocess'] = array(
    'title' => 'Add a preprocess field',
    'description' => 'Adds a preprocess field',
    'route_name' => 'add_custom_preprocess_field',
    'type' => MENU_LOCAL_ACTION,
    'weight' => 3,
  );
  $items['admin/structure/ds/fields/manage_preprocess/%'] = array(
    'title' => 'Edit a preprocess field',
    'description' => 'Manage a preprocess field',
    'route_name' => 'manage_custom_preprocess_field'
  );
  $items['admin/structure/ds/fields/delete'] = array(
    'title' => 'Delete a field',
    'description' => 'Delete a field.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ds_delete_field_confirm'),
    'file' => 'includes/fields.inc',
    'access arguments' => array('admin fields'),
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );
  // Block can be disabled.
  // @todo blocks have changed completely - also do some sort of library thing ?
  /*
  if (module_exists('block')) {
    $items['admin/structure/ds/fields/manage_block'] = array(
      'title' => 'Add a block field',
      'description' => 'Manage a block field',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('ds_edit_block_field_form'),
      'file' => 'includes/fields.inc',
      'access arguments' => array('admin_fields'),
      'type' => MENU_LOCAL_ACTION,
      'weight' => 2,
    );
  }*/

  return $items;
}

/**
 * Returns whether a view mode machine name is unique.
 */
function ds_view_mode_unique($name) {
  $value = strtr($name, array('-' => '_'));
  if (config('ds.view_modes.' . $value)->get()) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Returns whether a field machine name is unique.
 */
function ds_field_unique($name) {
  $value = strtr($name, array('-' => '_'));
  if (config('ds.field.' . $value)->get()) {
    return TRUE;
  }
  return FALSE;
}
